/* ======================================================================================
   @FORMS -> BASE
   ====================================================================================== */

/* Indicate that `label` will shift focus to the associated `input` element */
label {cursor: pointer;}

/* Text inputs via the `.txt-input` class, `textarea` and `select` */
.txt-input,
textarea,
select {
	width: 100%;
	padding: to-em($spacing-third);
	border: 1px solid $color-grey-light;
	border-radius: $border-radius;
	box-shadow: inset -1px 1px 1px 0 rgba(#000, 0.1);
	background: #fff;
	@include prefix(transition, border 0.2s linear, box-shadow 0.2s linear);

	/* Focus pseudo class */
	&:focus {
		outline: none;
		border-color: rgba(#000, 0.35);
		box-shadow: inset 0 1px 3px rgba(#000, 0.1),
					0 0 10px rgba(#000, 0.35);

		/* Old IE */
		@include old-ie {border-color: $color-grey;}
	}
}

/* Textarea */
textarea {
	height: 9em;
	resize: vertical;
}

/* Select list */
select {width: auto;}

/* Alternate sizes */
.txt-input--sml {@include to-rem(width, 80);}

.txt-input--med {@include to-rem(width, 236);}

/* Placeholder */
@include input-placeholder {color: #aaa;}

/* Disabled and Read-only */

/*
	Note: it is okay to use `!important` here as we're doing it pre-emptively i.e. you know you will always want the rule it's applied too to take precedence.
*/

button[disabled],
input[disabled],
select[disabled],
textarea[disabled],
.is-disabled {
	cursor: not-allowed !important;
	text-shadow: none !important;
	box-shadow: none !important;
	@include opacity(0.7, !important);
}

/* 'Required field' indicator (asterisk) */
.req-field {
	font-family: Verdana, Geneva, sans-serif;
	line-height: 1;
	color: $color-attention;
	cursor: help;
}

/* Resest some defaults */
form p {margin: 0;}