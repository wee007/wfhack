/* ======================================================================================
   @FORMS -> BASE
   ====================================================================================== */

/* Indicate that `label` will shift focus to the associated `input` element */
label {cursor: pointer;}

/* Text inputs via the `.txt-input` class, `textarea` and `select` (only for non-touch) */
.txt-input,
textarea,
.no-touch select {
  color: $color-txt-base;
  border-radius: $border-radius;
  border: 1px solid $color-grey-med-3;
  background: #fff;
  @include prefix(transition, border 0.2s linear);

  /* Focus state */
  &:focus {border-color: darken($color-grey-med-3, 12%);}
}

/* Text inputs via the `.txt-input` class and `textarea` */
.txt-input,
textarea {
  width: 100%;
  @include to-rem(padding, $spacing-third $spacing-half);

  /* Focus state */
  &:focus {outline: none;}
}

/* Textarea */
textarea {
	height: 9em;
	resize: vertical;
}

/* Select list (only for non-touch) */
.no-touch select {@include to-rem(padding, $spacing-third);}

/* Search inputs */
input[type="search"] {
  @include prefix(appearance, none);
  @include prefix(box-sizing, border-box);
}

/* Alternate sizes */
.txt-input--sml {@include to-rem(width, 80);}

.txt-input--med {@include to-rem(width, 236);}

/* Placeholder */
@include input-placeholder {
	color: $color-txt-light;
	font-style: italic;
}

/* Firefox 19+ sets an opacity on placeholder text by default so we need to reset it */
::-moz-placeholder {opacity: 1;}

/* Disable zooming of inputs and selects for iOS/iPhone and Androids when focused by setting to 16px */
.iphone,
.android {
  .search-mini__input,
  .txt-input,
  textarea,
  select {
    &:focus {font-size: 16px;}
  }

  /* 2px top and bottom padding for these inputs so the UI doesn't jump */
  .search-mini__input:focus {
    @include to-rem(padding-top padding-bottom, 2);
  }
}

/* Disabled and Read-only */

/*
	Note: it is okay to use `!important` here as we're doing it pre-emptively i.e. you know you will always want the rule it's applied too to take precedence.
*/

button[disabled],
input[disabled],
select[disabled],
textarea[disabled],
.is-disabled {
	cursor: not-allowed !important;
	text-shadow: none !important;
	box-shadow: none !important;
	@include opacity(0.65, !important);
}

/* Modifier: prevent hover/focus states being applied */
.is-disabled--no-hover {
  color: inherit !important;
  background: inherit !important;
}

/* 'Required field' indicator (asterisk) */
.req-field {
	font-family: Verdana, Geneva, sans-serif;
	line-height: 1;
	cursor: help;
}

/* Resest some defaults */
form p {margin: 0;}