/* ======================================================================================
   @HELPERS -> HIDE
   ====================================================================================== */

/*
	Hides elements in various ways, see inline comments.
*/

/* Hide from both screen readers and browsers */
.hide-fully {display: none;}

	/* Apply at specific breakpoints */

	/* Palm - need 3 versions for `block` (default), `inline` and `inline-block` */
	.hide-fully--palm,
	.hide-fully--palm-inline,
	.hide-fully--palm-inline-block {display: none;}

	@include respond-min($non-palm) {
		.hide-fully--palm {display: block;}

		.hide-fully--palm-inline {display: inline;}

		.hide-fully--palm-inline-block {display: inline-block;}
	}

	/* Non-palm */
	@include respond-min($non-palm) {
		.hide-fully--non-palm {display: none;}
	}

/*
	Hide only visually but have it available for screen readers, can use at specific breakpoints.

	Note: need to use silent placeholders to decrease the specificity as the CSS for placeholders is called first, so we can easily override when required. However within the mq we use a `@mixin` as we can't `@extend` in mq's.
*/
.hide-visually,
.hide-visually--palm {@extend %hide-visually;}

@include respond-min($non-palm) {
	.hide-visually--palm {@include hide-visually-off;}

	.hide-visually--non-palm {@include hide-visually;}
}

/* Form `legend` requires this */
legend.hide-visually {left: $off-screen-distance;}

/* Turns off `.hide-visually` i.e. bring back into view */
.hide-visually-off {@extend %hide-visually-off;}

/* Hide stuff relating to JS */
.js .js-enabled-hide,
.js .js-hide-show {display: none;}

.no-js .js-disabled-hide {display: none !important;}

/* Print */
@media print {
	.hide-print {display: none;}

	.js-hide-show {display: block !important;}
}