/* ======================================================================================
   @MODULES -> WIDGETS -> ACCORDION
   ====================================================================================== */

/*
	Usage:
		Typically for preserving screen real estate e.g. a complex menu as each item can be 'expanded' to reveal the content associated with that item and it can also be 'collapsed' to hide its associated content. There can be zero or more items expanded at a time, depending on the jQuery plugin configuration.

	Demo:
		Style Guide -> Modules -> Widgets -> Accordion
*/

.accordion {
	border: 1px solid $color-grey-1;

	/* Accordion items */
	> li {
		border-top: 1px solid $color-grey-1;

		/* Turn off border for first child */
		&:first-child {border-top: 0;}
	}
}

	/* Shared */
	.accordion__header,
	.accordion__content {width: 100%;} /* Note: have to set a width otherwise animation jumps. */

	/* Heading */
	.accordion__header {
		@include to-em(padding, $spacing-quarter $spacing-half);
		@extend %transition-subtle;
		background-color: $color-grey-1;
		font-size: 100%;
		margin: 0;

		/* JS users */
		.js & {
			cursor: pointer;

			/* Hover and focus states */
			&:hover,
			&:focus {
				background: $color-dark-txt;
				color: #fff;
			}
		}

		/* Print */
		@media print {
			border-bottom: 1px solid;
		}

		/* Plus sign */
		.js &:before {
			content: "\002B";
			display: inline-block;
			speak: none;
			margin-right: to-em($spacing-quarter);
			vertical-align: top;

			/* Print */
			@media print {
				display: none;
			}
		}

		/* Expanded state */
		.js .is-expanded & {
			background: $color-brand;
			color: #fff;

			/* Minus sign */
			&:before {content: "\2212";}
		}
	}

	/* Content */
	.accordion__content {
		padding: to-em($spacing-half);
		display: none;

		/* Double the padding at this breakpoint */
		@include respond-min($non-palm) {
			padding: to-em($spacing-base);
		}

		/* Non JS users */
		.no-js & {display: block;}

		/* Print */
		@media print {
			display: block !important; /* Note: need to use `!important` in order to override the inline display rule applied by the jQuery plugin. */
		}
	}